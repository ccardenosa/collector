#!/usr/bin/env bash

DIR="$(cd "$(dirname "$0")" && pwd)"
SOURCE_ROOT="${SOURCE_ROOT:-${DIR}/..}"
BUILD_CONTAINER_TAG="${BUILD_CONTAINER_TAG:-stackrox/collector-builder:kobuilder-cache}"
KOBUILD_DIR="${KOBUILD_DIR:-${SOURCE_ROOT}/kobuild}"
PROBE_DIR="${PROBE_DIR:-${SOURCE_ROOT}/probes}"

kernel="$1"
probe_type="$2"
flavor="$3"

set -euo pipefail

die() {
    echo "Usage: $0 <kernel-version> <bpf|mod> <builder-image-flavor>"
    echo >&2 "$@"
    exit 1
}

[[ -n "${kernel}" && -n "${probe_type}" && -n "${flavor}" ]] || die

bundle_file="${KOBUILD_DIR}/bundles/bundle-${kernel}.tgz"
if [[ ! -f "${bundle_file}" ]]; then
    die "Kernel bundle not found: ${bundle_file}"
fi

if ! basename "${SOURCE_ROOT}/kernel-modules/build/Dockerfile".* | sed 's/Dockerfile.//' | grep -q "${flavor}"; then
    die "Unknown builder flavor: ${flavor}"
fi

case $probe_type in
  bpf|mod) ;;
  *) die "Probe type must be either 'mod' or 'bpf'" ;;
esac

module_version=$(cat "${SOURCE_ROOT}/kernel-modules/kobuild-tmp/MODULE_VERSION.txt")

distro="$(tar -O -xzf "${bundle_file}" ./BUNDLE_DISTRO)"

echo "Using ${flavor} builder"
echo "Building ${probe_type} probe for ${distro}:${kernel} and collector version ${module_version}"

task_file=/tmp/kernel-build-task-file
echo "${kernel} ${module_version} ${probe_type}" > "${task_file}"

mkdir -p "${PROBE_DIR}"
docker run --rm -i \
  -v "${KOBUILD_DIR}/bundles:/bundles:ro" \
  -v "${SOURCE_ROOT}/sources:/sources:ro" \
  -v "${PROBE_DIR}:/output" \
  --tmpfs /scratch:exec \
  "build-kernel-modules-${flavor}" build-kos <"${task_file}"
